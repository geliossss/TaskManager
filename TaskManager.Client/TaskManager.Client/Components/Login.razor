@page "/login"
@using TaskManager.Client.Services
@inject UserService UserService
@inject NavigationManager Nav
@inject AuthService Auth
@rendermode InteractiveServer

<h3>Вход</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p style="color: red">@Message</p>
}

<div>
    <label>Логин:</label>
    <input @bind="LoginInput" />
</div>
<div>
    <label>Пароль:</label>
    <input type="password" @bind="PasswordInput" />
</div>

<button @onclick="LoginUser">Войти</button>

@code {
    private string LoginInput = string.Empty;
    private string PasswordInput = string.Empty;
    private string? Message;

    private async Task LoginUser()
    {

        try
        {
            var user = await UserService.LoginAsync(new()
                {
                    Login = LoginInput,
                    Password = PasswordInput
                });

            if (user != null)
            {
                Auth.LoginUser(user.UserId, $"{user.FirstName} {user.LastName}", user.Login, PasswordInput);

                Nav.NavigateTo("/profile");
            }
            else
            {
                Message = "Неверный логин или пароль.";
            }
        }
        catch (HttpRequestException httpEx)
        {
            Message = "Ошибка связи с сервером. Проверьте соединение или адрес API.";
        }
        catch (Exception ex)
        {
            Message = "Произошла ошибка при попытке входа.";
        }

    }
}
